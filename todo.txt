//To get server up and running: 
install mongodb
npm install 

//use bower? grunt?
//Travis-ci for unit testing
//use connect-flash ? express-session ?

Add frontend for stopwatch

Database (MongoDB):
1.User
{
  userID: id
  username: username
  password: password
  point: number
}

2.Question Data
{
  answerBy: User.userID,
  answerAt: Timestamp
  question: string
  answer: string
}

Server: ** Please response with JSON string
1. auth/login
- POST: Example data {username: 'huytran', password: '123'}
- response {state: "success", {username: name, userID: id}
        or {state: "error"  , error_message: error}

2. auth/signup
- POST: Example data {username: 'huytran', password: '123'}
- Authenticate, hash, add to database
- response {state: "success",  {username: name, userID: id}}
          or error_message

4. auth/signout
- POST
- redirect to '/'

5. get /questions
Randomly return a question that has empty answerBy property

6. /questions/:id
get: all questions answered by that id
post: if answering correctly, increment the points associated with that user

Angular Front End
1. #/main
- Display the current question
- if the user is not authenticated, button login
- else let them answer the question

2. #/login, #/signup
- post auth/login
IF success
- update $rootScope.current_user and $rootScope.authenticated
- redirect #/user

3. #/user
- show current point
- show previous answer history

